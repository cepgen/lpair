CDECK  ID>, VERSET. 
      SUBROUTINE VERSET(IPROC,EB,VMN)
C
C     Vermaseren starting routine.  Sets up and calls all of the
C     standard routines:   VEGAS, SETGEN
C
C     Written by:   Gordon J. VanDalen
C                   UC Riverside
C                   July 7, 1988
C
C     Modified by:  John G. Layter
C                   CERN
C                   August 16, 1988
C
C     Modified by:  Clarence J. Virtue
C                   CERN
C                   Feb. 19,1992
C             - RNDM generator replaced by RANMAR (CERN Program Lib V113)
C             - for more information/jusification see DD/88/22 by F.James and
C                OPAL/OFFL/12/0047 March 7,1988 by Daniel Lellouch and Rafi
C                Yaari
C             - previous version of code is obtained with +USE,RNDM. otherwise
C                the RANMAR generator is used
C
      IMPLICIT NONE
      REAL EB,VMn
      INTEGER IPROC
C
C
C   Input variables for the generator
C     ME    = electron mass
C     MPART = mass of what is made (muon, u-quark, etc.)
C     EBEAM = beam energy
C     CONST = some hbar's, c's, pi's, etc in pb.
C     SQ    = 2.*EBEAM = sqrt(s)
C     VMIN  = min gamma-gamma mass
C     CH4TH = (charge)**4 of particle (muon, u-quark, etc.)
C     LUNDID= Lund ID of particle made (muon, u-quark, etc.)
C
      DOUBLE PRECISION ME,MPART,EBEAM,CONST,SQ,VMIN,CH4TH
      INTEGER LUNDID,IGEN
      COMMON/VERINP/ME,MPART,EBEAM,CONST,SQ,VMIN,CH4TH,LUNDID,IGEN
C
C
C   RANMAR PSEUDORANDOM NUMBER GENERATOR COMMON
C
      REAL RVEC(10)
      INTEGER ID,ITI,IJKLIN,NTOTIN,NTO2IN,STATE(100)
      COMMON/RANMA1/IJKLIN,NTOTIN,NTO2IN,STATE
C
C
      DOUBLE PRECISION MASSES(8),CHGS(8)
      INTEGER LUND(8),NSEED,IIN,IOUT,NUMVEG,ITRVEG,NUMSET
C
      DOUBLE PRECISION VERFUN
      EXTERNAL VERFUN
C
      DATA MASSES/.000511,.105,1.784,.325,.325,.5,1.6,5.0/
      DATA CHGS/1.,1.,1.,.5926,.03704,.03704,.5926,.03704/
      DATA LUND/7,9,11,501,502,503,504,505/
C
      DATA IIN,IOUT/5,6/
C
C
C -generate a seed from the date and time; this is generally not a recommended
C  practice but with RANMAR it guarantees a unique sequence for each set of
C  4-vectors generated since EACH seed between 1 and 900,000,000 gives an
C  INDEPENDENT sequence of random numbers 10**43 long!
C -RMARUT and RMARIN can be used to output the seed value used and to input a
C  specific seed value (ie. for debugging purposes)
C
      IJKLIN=0
      NTOTIN=0
      NTO2IN=0
      CALL DATIME(ID,ITI)
      IJKLIN=(ID-200000)*1000+ITI/10
      CALL RMARIN(IJKLIN,NTOTIN,NTO2IN)
      EBEAM=EB
      VMIN=VMN
      ME=.511D-03
      CONST=(19.732D+03)**2
      NUMSET=2
      NUMVEG=1000
      ITRVEG=5
      IGEN=IPROC
      IF(IPROC.LE.0.OR.IPROC.GT.8) GOTO 99
      MPART=MASSES(IPROC)
      CH4TH=CHGS(IPROC)
      LUNDID=LUND(IPROC)
      SQ=2.*EBEAM
      CALL VEGAS(VERFUN,1.D-02,7,NUMVEG,ITRVEG,1,0)
      CALL SETGEN(VERFUN,7,NUMSET,1,1)
      RETURN
99    STOP 'Input parameter error'
      END
CDECK  ID>, VERGEN. 
      SUBROUTINE VERGEN
C
C         Modified - Sept. 1988 - G J VanDalen - allow user to
C         a. request one event at a time
C         b.  summation call at end
C
C         Original Code routine GENERA - generates events
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      EXTERNAL VERFUN
C
C   VERMAS INTERNAL COMMON
C
      COMMON/MAXI/MDUM,MBIN,FFMAX,FMAX(2500),NM(2500)
      INTEGER MDUM,MBIN,NM
      DOUBLE PRECISION FFMAX,FMAX
C
      DOUBLE PRECISION X(10)
      INTEGER N(10)
C
C   RANMAR PSEUDORANDOM NUMBER GENERATOR COMMON
C
      REAL RVEC(10)
      INTEGER ID,ITI,IJKLIN,NTOTIN,NTO2IN,STATE(100)
      COMMON/RANMA1/IJKLIN,NTOTIN,NTO2IN,STATE
C
      PARAMETER (NDIM=7)
      INTEGER  NTREAT
      SAVE J,Y,JJ,JJJ,K,G,A,M,T,Z,B,ISAVE
      DATA NCALL,MCALL,NEV,MEV,NN,M/0,0,0,0,0,0/
      DATA ISAVE/0/,NTREAT/1/
C
      IF(ISAVE.NE.0) GOTO 3
      ISAVE=0
      AM=MBIN
      AMI=1./AM
      MAX=MBIN**NDIM
 1    NN=NN+1
      CALL RANMAR(RVEC,2)
      J=RVEC(1)*MAX+1.
      Y=RVEC(2)*FFMAX
      NM(J)=NM(J)+1
      IF(Y.GT.FMAX(J))GO TO 1
      JJ=J-1
      CALL RANMAR(RVEC,NDIM)
      DO 2 K=1,NDIM
      JJJ=JJ/MBIN
      N(K)=JJ-JJJ*MBIN
      X(K)=(RVEC(K)+N(K))*AMI
 2    JJ=JJJ
      IF(NTREAT.GT.0)G=TREAT(VERFUN,X,NDIM)
      IF(NTREAT.LE.0)G=VERFUN(X)
      NCALL=NCALL+1
      IF(Y.GT.G)GO TO 1
      CALL ACCEPT
      NEV=NEV+1
      IF(G.LE.FMAX(J)) RETURN
      IF(NM(J).EQ.1) THEN
         FMAX(J)=G
         IF(G.GT.FFMAX) FFMAX=G
         RETURN
      ENDIF
      A=NM(J)*(G-FMAX(J))/FFMAX
      M=M+1
      T=A
      ISAVE=3
      RETURN
 3    IF(T.GE.1.)GO TO 4
      CALL RANMAR(RVEC,1)
      IF(RVEC(1).GT.T) THEN
         FMAX(J)=G
         IF(G.GT.FFMAX)  FFMAX=G
         ISAVE=0
         GOTO 1
      ENDIF
      T=1.
 4    T=T-1.
      CALL RANMAR(RVEC,NDIM)
      DO 5 K=1,NDIM
 5    X(K)=(RVEC(K)+N(K))*AMI
      IF(NTREAT.GT.0)Z=TREAT(VERFUN,X,NDIM)
      IF(NTREAT.LE.0)Z=VERFUN(X)
      MCALL=MCALL+1
      NCALL=NCALL+1
      IF(Z.LT.FMAX(J))GO TO 3
      CALL ACCEPT
      MEV=MEV+1
      NEV=NEV+1
      IF(Z.GT.G) THEN
         B=NM(J)*(Z-FMAX(J))/FFMAX
         T=T+(B-A)
         A=B
         G=Z
      ENDIF
      ISAVE=3
      RETURN
C
      ENTRY VEREND
 7    WRITE(6,100) NEV,NCALL,NN
 100  FORMAT(32H1SUBROUTINE GENERA HAS PRODUCED ,I10,8H EVENTS./
     1  11H THIS TOOK ,I10,19H FUNCTION CALLS IN ,I10,10H ATTEMPTS./)
      WRITE(6,101) M,MEV,MCALL
 101  FORMAT(1H0,I10,29H TIMES A MAXIMUM WAS CHANGED./
     1  11H THIS GAVE ,I8,11H EVENTS IN ,I9,7H CALLS.//)
      RETURN
      END
CDECK  ID>, VERFUN. 
      DOUBLE PRECISION FUNCTION VERFUN(X)
C
C      Function called by Vegas,SetGen,Genera - calls Peripp
C
      IMPLICIT NONE
C
C
C   Input variables for the generator
C     ME    = electron mass
C     MPART = mass of what is made (muon, u-quark, etc.)
C     EBEAM = beam energy
C     CONST = some hbar's, c's, pi's, etc in pb.
C     SQ    = 2.*EBEAM = sqrt(s)
C     VMIN  = min gamma-gamma mass
C     CH4TH = (charge)**4 of particle (muon, u-quark, etc.)
C     LUNDID= Lund ID of particle made (muon, u-quark, etc.)
C
      DOUBLE PRECISION ME,MPART,EBEAM,CONST,SQ,VMIN,CH4TH
      INTEGER LUNDID,IGEN
      COMMON/VERINP/ME,MPART,EBEAM,CONST,SQ,VMIN,CH4TH,LUNDID,IGEN
C
C
C     Local Variables
C
      DOUBLE PRECISION X(10),DJ,PERIPP
      EXTERNAL PERIPP
      CALL GAMGAM(EBEAM,ME,ME,ME,ME,MPART,MPART,VMIN,SQ,DJ,0,X,1)
      IF(DJ.EQ.0)GOTO 20
      VERFUN=CH4TH*CONST*DJ*PERIPP(0,0)
      RETURN
  20  VERFUN=0.
      RETURN
      END
CDECK  ID>, ACCEPT. 
      SUBROUTINE ACCEPT
C
C            Save events
C
      IMPLICIT NONE
C
C
C   VERMAS INTERNAL COMMON
C
      COMMON/VARIAB/E,E1,E2,E3,E4,E5,P,P3,P4,P5,CT3,ST3,CT4,ST4,CT5,
     1 ST5,CP3,SP3,CP5,SP5
      DOUBLE PRECISION E,E1,E2,E3,E4,E5,P,P3,P4,P5,CT3,ST3,CT4,ST4,CT5,
     1 ST5,CP3,SP3,CP5,SP5
C
C
C   VERMAS INTERNAL COMMON
C
      COMMON/VARIAC/AL3,AL4,BE4,BE5,DE3,DE5,PP3,PP4,PP5
      DOUBLE PRECISION AL3,AL4,BE4,BE5,DE3,DE5,PP3,PP4,PP5
C
C
C   VERMAS INTERNAL COMMON
C
      COMMON/VARIAD/E6,E7,P6,P7,CT6,ST6,CT7,ST7,CP6,SP6,CP7,SP7,W
      DOUBLE PRECISION E6,E7,P6,P7,CT6,ST6,CT7,ST7,CP6,SP6,CP7,SP7,W
C
C
C   Input variables for the generator
C     ME    = electron mass
C     MPART = mass of what is made (muon, u-quark, etc.)
C     EBEAM = beam energy
C     CONST = some hbar's, c's, pi's, etc in pb.
C     SQ    = 2.*EBEAM = sqrt(s)
C     VMIN  = min gamma-gamma mass
C     CH4TH = (charge)**4 of particle (muon, u-quark, etc.)
C     LUNDID= Lund ID of particle made (muon, u-quark, etc.)
C
      DOUBLE PRECISION ME,MPART,EBEAM,CONST,SQ,VMIN,CH4TH
      INTEGER LUNDID,IGEN
      COMMON/VERINP/ME,MPART,EBEAM,CONST,SQ,VMIN,CH4TH,LUNDID,IGEN
C
      COMMON/LUJETS/N,K(2000,2),PL(2000,5)
      INTEGER N,K
      REAL PL
C
      INTEGER JJ
      DOUBLE PRECISION TWOPI,PHI,SINPHI,COSPHI,PP6
      DOUBLE PRECISION PEMX,PEMY,PEMZ,PEPX,PEPY,PEPZ
      DOUBLE PRECISION PMMX,PMMY,PMMZ,PMPX,PMPY,PMPZ
C
C   RANMAR PSEUDORANDOM NUMBER GENERATOR COMMON
C
      REAL RVEC(10)
      INTEGER ID,ITI,IJKLIN,NTOTIN,NTO2IN,STATE(100)
      COMMON/RANMA1/IJKLIN,NTOTIN,NTO2IN,STATE
C
      REAL ETEMP,ECM,MASSES(8)
      DATA MASSES/0.000511,.105,1.784,0.325,0.325,0.5,1.6,5.0/
      DATA TWOPI/6.28318530718D+00/
C
      CALL RANMAR(RVEC,2)
      PHI=RVEC(1)*TWOPI
      If(RVEC(2).Gt.0.5)GoTo 1
      SP3=-SP3
      SP5=-SP5
      SP6=-SP6
      SP7=-SP7
1     SINPHI=DSIN(PHI)
      COSPHI=DCOS(PHI)
C
C            PEM=Momentum of e-
C            PEP=Momentum of e+
C            PMM=Momentum of mu- or whatever
C            PMP=Momentum of mu+
C            The momentum of the mu+ is - the sum of the others.
C
      PEMX=PP3*(CP3*COSPHI-SP3*SINPHI)
      PEMY=PP3*(CP3*SINPHI+SP3*COSPHI)
      PEMZ=P3*CT3
C
      PEPX=PP5*(CP5*COSPHI-SP5*SINPHI)
      PEPY=PP5*(CP5*SINPHI+SP5*COSPHI)
      PEPZ=P5*CT5
C
      PP6=P6*ST6
      PMMX=PP6*(CP6*COSPHI-SP6*SINPHI)
      PMMY=PP6*(CP6*SINPHI+SP6*COSPHI)
      PMMZ=P6*CT6
C
      PMPX=-PEMX-PEPX-PMMX
      PMPY=-PEMY-PEPY-PMMY
      PMPZ=-PEMZ-PEPZ-PMMZ
      K(1,2)=7
      K(2,2)=-7
      K(3,2)=LUNDID
      K(4,2)=-LUNDID
      DO JJ=1,4
            K(JJ,1)=0
            IF(IABS(K(JJ,2)).GT.400.AND.JJ.EQ.3) K(JJ,1)=10000
      ENDDO
      PL(1,1)=PEMX
      PL(1,2)=PEMY
      PL(1,3)=PEMZ
      PL(2,1)=PEPX
      PL(2,2)=PEPY
      PL(2,3)=PEPZ
      PL(3,1)=PMMX
      PL(3,2)=PMMY
      PL(3,3)=PMMZ
      PL(4,1)=PMPX
      PL(4,2)=PMPY
      PL(4,3)=PMPZ
      DO JJ=1,4
            IF(JJ.LE.2) THEN
              PL(JJ,5)=MASSES(1)
            ELSE
              PL(JJ,5)=MASSES(IGEN)
            ENDIF
            ETEMP=PL(JJ,1)*PL(JJ,1)+PL(JJ,2)*PL(JJ,2)
     1        +PL(JJ,3)*PL(JJ,3)+PL(JJ,5)*PL(JJ,5)
            PL(JJ,4)=SQRT(ETEMP)
      ENDDO
      N=4
      ECM=(PL(3,4)+PL(4,4))**2
      DO JJ=1,3
        ECM=ECM-((PL(3,JJ)+PL(4,JJ))**2)
      ENDDO
      ECM=SQRT(ECM)
      CALL HFILL(1315,ECM,0.,1.)
      IF(IGEN.GE.3) THEN
        CALL TWPSEL(ECM)
        CALL LUEXEC
      ENDIF
C
      RETURN
      END
CDECK  ID>, GAMGAM. 
      SUBROUTINE GAMGAM(EBEAM,V1,V2,V3,V5,V6,V7,VMIN,VMAX,DJ,NOPT,X,NM)
C
C         Kinematics for gamma-gamma interactions
C
C         Calls PICKIN
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
C   VERMAS INTERNAL COMMON
C
      COMMON/VARIAB/E,E1,E2,E3,E4,E5,P,P3,P4,P5,CT3,ST3,CT4,ST4,CT5,
     1 ST5,CP3,SP3,CP5,SP5
      DOUBLE PRECISION E,E1,E2,E3,E4,E5,P,P3,P4,P5,CT3,ST3,CT4,ST4,CT5,
     1 ST5,CP3,SP3,CP5,SP5
C
C
C   VERMAS INTERNAL COMMON
C
      COMMON/VARIAC/AL3,AL4,BE4,BE5,DE3,DE5,PP3,PP4,PP5
      DOUBLE PRECISION AL3,AL4,BE4,BE5,DE3,DE5,PP3,PP4,PP5
C
C
C   VERMAS INTERNAL COMMON
C
      COMMON/VARIAD/E6,E7,P6,P7,CT6,ST6,CT7,ST7,CP6,SP6,CP7,SP7,W
      DOUBLE PRECISION E6,E7,P6,P7,CT6,ST6,CT7,ST7,CP6,SP6,CP7,SP7,W
C
C
C   VERMAS INTERNAL COMMON
C
      COMMON/PICKZZ/W1,W2,W3,W4,W5,W31,W52,W12,TAU,SL1
      DOUBLE PRECISION W1,W2,W3,W4,W5,W31,W52,W12,TAU,SL1
C
C
C   VERMAS INTERNAL COMMON
C
      COMMON/DOTPS/Q1DQ,Q1DQ2,W6
      DOUBLE PRECISION Q1DQ,Q1DQ2,W6
C
C
C   VERMAS INTERNAL COMMON
C
      COMMON/EXTRA/S1,S2,T1,T2
      DOUBLE PRECISION S1,S2,T1,T2
C
C
C   VERMAS INTERNAL COMMON
C
      COMMON/DOTP/P12,P13,P14,P15,P23,P24,P25,P34,P35,P45,P1K2,P2K1
      DOUBLE PRECISION P12,P13,P14,P15,P23,P24,P25,P34,P35,P45,P1K2,P2K1
C
C
C   VERMAS INTERNAL COMMON
C
      COMMON/CIVITA/EPSI,G5,G6,A5,A6,BB
      DOUBLE PRECISION EPSI,G5,G6,A5,A6,BB
C
C
C   VERMAS INTERNAL COMMON
C
      COMMON/EXT/CTG,STG,CPG,SPG
      DOUBLE PRECISION CTG,STG,CPG,SPG
C
C
C   VERMAS INTERNAL COMMON
C
      COMMON/ANGU/CTCM6,STCM6
      DOUBLE PRECISION CTCM6,STCM6
C
      DOUBLE PRECISION X(7)
      DATA PI/3.14159265359D+00/,CONST/2.1868465D+10/
      W6=V6*V6
      W7=V7*V7
      WMIN=V6+V7
      IF(WMIN.LT.VMIN)WMIN=VMIN
      WMIN=WMIN*WMIN
      E=2.*EBEAM
      S=E*E
      WMAX=E-V3-V5
      IF(WMAX.GT.VMAX)WMAX=VMAX
      WMAX=WMAX*WMAX
      XW=X(5)
      CALL MAPW2(W4,XW,WMIN,WMAX,DW)
      V4=DSQRT(W4)
      W=V4
      CALL ORIENT(S,V1,V2,V3,V4,V5,DJ,NOPT,X)
      IF(DJ.EQ.0)RETURN
      ECM6=(W4+W6-W7)/(2.*V4)
      PCM6=DSQRT(ECM6*ECM6-W6)
      DJ=DJ*DW*PCM6/(V4*CONST*S)
      E3MP3=W3/(E3+P3)
      E1MP1=W1/(E1+P)
      EG=(W4+T1-T2)/(2.*V4)
      PG=DSQRT(EG*EG-T1)
      PGX=-PP3*CP3*CT4-ST4*(DE3-E1MP1+E3MP3+P3*AL3)
      PGY=-PP3*SP3
      PGZ=V4*DE3/(E4+P4)-E4*DE3*AL4/V4-PP3*CP3
     A *E4*ST4/V4+E4*CT4/V4*(P3*AL3+E3MP3-E1MP1)
      PGP=DSQRT(PGX*PGX+PGY*PGY)
      PGG=DSQRT(PGP*PGP+PGZ*PGZ)
      IF(PGG.GT.PGP*0.9.AND.PGG.GT.PG)PG=PGG
      STG=PGP/PG
      CPG=PGX/PGP
      SPG=PGY/PGP
      CTG=DSQRT(1.-STG*STG)
      IF(PGZ.LT.0)CTG=-CTG
      IF(NM.EQ.0)GO TO 1
      AMAP=.5*(W4-T1-T2)
      BMAP=.5*DSQRT(((W4-T1-T2)**2-4.*T1*T2)*(1.-4.*W6/W4))
      YMAP=(AMAP+BMAP)/(AMAP-BMAP)
      BETA=YMAP**(2.*X(6)-1.)
      X(6)=(AMAP/BMAP*(BETA-1.)/(BETA+1.)+1.)/2.
      CTCM6=1.-2.*X(6)
      DDD=(AMAP+BMAP*CTCM6)*(AMAP-BMAP*CTCM6)/AMAP/BMAP*DLOG(YMAP)
      DJ=DJ*DDD/2.
 1    CTCM6=1.-2.*X(6)
      STCM6=2.*DSQRT(X(6)*(1.-X(6)))
      PHICM6=2.*PI*X(7)
      CPCM6=DCOS(PHICM6)
      SPCM6=DSIN(PHICM6)
      PCM6X=PCM6*STCM6*CPCM6
      PCM6Y=PCM6*STCM6*SPCM6
      PCM6Z=PCM6*CTCM6
      PC6Z=CTG*PCM6Z-STG*PCM6X
      H1=  STG*PCM6Z+CTG*PCM6X
      PC6X=CPG*H1-SPG*PCM6Y
      P6Y=CPG*PCM6Y+SPG*H1
      E6=(E4*ECM6+P4*PC6Z)/V4
      H2=(E4*PC6Z+P4*ECM6)/V4
      P6X=CT4*PC6X+ST4*H2
      P6Z=CT4*H2-ST4*PC6X
      P6=DSQRT(E6*E6-W6)
      E7=E4-E6
      P7=DSQRT(E7*E7-W7)
      P7X=PP4-P6X
      P7Y=-P6Y
      P7Z=P4*CT4-P6Z
      PP6=DSQRT(P6X*P6X+P6Y*P6Y)
      PP7=DSQRT(P7X*P7X+P7Y*P7Y)
      CT6=P6Z/P6
      ST6=PP6/P6
      CT7=P7Z/P7
      ST7=PP7/P7
      CP6=P6X/PP6
      SP6=P6Y/PP6
      CP7=P7X/PP7
      SP7=P7Y/PP7
      Q1DQ=EG*(2.*ECM6-V4)-2.*PG*PCM6*CTCM6
      Q1DQ2=0.5*(W4-T1-T2)
      BB=T1*T2+(W4*STCM6*STCM6+4.*W6*CTCM6*CTCM6)*PG*PG
      Q0=E6-E7
      QX=PP6*CP6-PP7*CP7
      QY=PP6*SP6-PP7*SP7
      QZ=P6*CT6-P7*CT7
      C1=(QX*SP3-QY*CP3)*PP3
      C2=(QZ*E1-Q0*P)*PP3
      C3=(W31*E1*E1+2.*W1*DE3*E1-W1*DE3*DE3+PP3*PP3*E1*E1)
     A /(E3*P+P3*CT3*E1)
      B1=(QX*SP5-QY*CP5)*PP5
      B2=(QZ*E2+Q0*P)*PP5
      B3=(W52*E2*E2+2.*W2*DE5*E2-W2*DE5*DE5+PP5*PP5*E2*E2)
     A /(E2*P5*CT5-E5*P)
      R12=C2*SP3+QY*C3
      R13=-C2*CP3-QX*C3
      R22=B2*SP5+QY*B3
      R23=-B2*CP5-QX*B3
      EPSI=P12*C1*B1+R12*R22+R13*R23
      G5=W1*C1*C1+R12*R12+R13*R13
      G6=W2*B1*B1+R22*R22+R23*R23
      A5=-(QX*CP3+QY*SP3)*PP3*P1K2-(E1*Q0-P*QZ)*(CP3*CP5+SP3*SP5)
     A *PP3*PP5+(DE5*QZ+Q0*(P+P5*CT5))*C3
      A6=-(QX*CP5+QY*SP5)*PP5*P2K1-(E2*Q0+P*QZ)*(CP3*CP5+SP3*SP5)
     A *PP3*PP5+(DE3*QZ-Q0*(P-P3*CT3))*B3
      RETURN
      END
CDECK  ID>, GENERA. 
      SUBROUTINE GENERA(F,NDIM,NEVENT,NTREAT)
C
C     Code routine GENERA - generates events
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      EXTERNAL F
C
C   VERMAS INTERNAL COMMON
C
      COMMON/MAXI/MDUM,MBIN,FFMAX,FMAX(2500),NM(2500)
      INTEGER MDUM,MBIN,NM
      DOUBLE PRECISION FFMAX,FMAX
C
      DOUBLE PRECISION X(10)
      INTEGER N(10)
C
C   RANMAR PSEUDORANDOM NUMBER GENERATOR COMMON
C
      REAL RVEC(10)
      INTEGER ID,ITI,IJKLIN,NTOTIN,NTO2IN,STATE(100)
      COMMON/RANMA1/IJKLIN,NTOTIN,NTO2IN,STATE
C
C
      AM=MBIN
      AMI=1./AM
      MAX=MBIN**NDIM
      NCALL=0
      MCALL=0
      NEV=0
      MEV=0
      NN=0
      M=0
 1    NN=NN+1
      CALL RANMAR(RVEC,2)
      J=RVEC(1)*MAX+1.
      Y=RVEC(2)*FFMAX
      NM(J)=NM(J)+1
      IF(Y.GT.FMAX(J))GO TO 1
      JJ=J-1
      CALL RANMAR(RVEC,NDIM)
      DO 2 K=1,NDIM
      JJJ=JJ/MBIN
      N(K)=JJ-JJJ*MBIN
      X(K)=(RVEC(K)+N(K))*AMI
 2    JJ=JJJ
      IF(NTREAT.GT.0)G=TREAT(F,X,NDIM)
      IF(NTREAT.LE.0)G=F(X)
      NCALL=NCALL+1
      IF(Y.GT.G)GO TO 1
      CALL ACCEPT
      NEV=NEV+1
      IF(NEV.GE.NEVENT)GO TO 7
      IF(G.LE.FMAX(J))GO TO 1
      IF(NM(J).EQ.1)GO TO 6
      A=NM(J)*(G-FMAX(J))/FFMAX
      M=M+1
      T=A
 3    IF(T.GE.1.)GO TO 4
      CALL RANMAR(RVEC,1)
      IF(RVEC(1).GT.T)GO TO 6
      T=1.
 4    T=T-1.
      CALL RANMAR(RVEC,NDIM)
      DO 5 K=1,NDIM
 5    X(K)=(RVEC(K)+N(K))*AMI
      IF(NTREAT.GT.0)Z=TREAT(F,X,NDIM)
      IF(NTREAT.LE.0)Z=F(X)
      MCALL=MCALL+1
      NCALL=NCALL+1
      IF(Z.LT.FMAX(J))GO TO 3
      CALL ACCEPT
      MEV=MEV+1
      NEV=NEV+1
      IF(NEV.GE.NEVENT)GO TO 6
      IF(Z.LE.G)GO TO 3
      B=NM(J)*(Z-FMAX(J))/FFMAX
      T=T+(B-A)
      A=B
      G=Z
      GO TO 3
 6    FMAX(J)=G
      IF(G.GT.FFMAX)FFMAX=G
      IF(NEV.LT.NEVENT)GO TO 1
 7    WRITE(6,100) NEV,NCALL,NN
 100  FORMAT(32H1SUBROUTINE GENERA HAS PRODUCED ,I10,8H EVENTS./
     1  11H THIS TOOK ,I10,19H FUNCTION CALLS IN ,I10,10H ATTEMPTS./)
      WRITE(6,101) M,MEV,MCALL
 101  FORMAT(1H0,I10,29H TIMES A MAXIMUM WAS CHANGED./
     1  11H THIS GAVE ,I8,11H EVENTS IN ,I9,7H CALLS.//)
      RETURN
      END
CDECK  ID>, INPLOT. 
      SUBROUTINE INPLOT(NOW,FF,PDX)
C
C         INPLOT DUMMY ROUTINES FOR VERMAS
C
      IMPLICIT NONE
      INTEGER NOW
      DOUBLE PRECISION FF,PDX
      RETURN
      ENTRY REPLOT(NOW,FF,PDX)
      RETURN
      ENTRY XPLOT(NOW,FF,PDX)
      RETURN
      ENTRY PLOTIT(NOW,FF,PDX)
      RETURN
      END
CDECK  ID>, MAPT1.  
      SUBROUTINE MAPT1(T,X,TMIN,TMAX,DT)
C
C         Mapping routine for PICKIN
C
      IMPLICIT NONE
      DOUBLE PRECISION T,X,TMIN,TMAX,DT,Y
C
      Y=TMAX/TMIN
      T=TMIN*Y**X
      DT=-T*DLOG(Y)
      RETURN
      END
CDECK  ID>, MAPT2.  
      SUBROUTINE MAPT2(T,X,TMIN,TMAX,DT)
C
C         Mapping routine for PICKIN
C
      IMPLICIT NONE
      DOUBLE PRECISION T,X,TMIN,TMAX,DT,Y
C
      Y=TMAX/TMIN
      T=TMIN*Y**X
      DT=-T*DLOG(Y)
      RETURN
      END
CDECK  ID>, MAPS2.  
      SUBROUTINE MAPS2(S2,X,SMIN,SMAX,DS)
C
C         Mapping routine for PICKIN
C
      IMPLICIT NONE
      DOUBLE PRECISION S2,X,SMIN,SMAX,DS,Y
C
      Y=SMAX/SMIN
      S2=SMIN*Y**X
      DS=S2*DLOG(Y)
      RETURN
      END
CDECK  ID>, MAPW2.  
      SUBROUTINE MAPW2(W2,X,W2MIN,W2MAX,DW)
C
C         Mapping routine for GAMGAM
C
      IMPLICIT NONE
      DOUBLE PRECISION W2,X,W2MIN,W2MAX,DW,WMIN,WMAX
C
      WMIN=1./W2MIN
      WMAX=1./W2MAX
      DW=WMIN-WMAX
      W2=1./(WMAX+DW*X)
      DW=DW*W2*W2
      RETURN
      END
CDECK  ID>, MAPLA.  
      SUBROUTINE MAPLA(X,Y,Z,U,XM,XP,D)
C
C         Mapping routine for PICKIN
C
      IMPLICIT NONE
      DOUBLE PRECISION X,Y,Z,U,XM,XP,D,XMB,XPB,C,ALP,ALM,AM,AP,YY,ZZ,AX
C
      XMB=XM-Y-Z
      XPB=XP-Y-Z
      C=-4.*Y*Z
      ALP=DSQRT(XPB*XPB+C)
      ALM=DSQRT(XMB*XMB+C)
      AM=XMB+ALM
      AP=XPB+ALP
      YY=AP/AM
      ZZ=YY**U
      X=Y+Z+(AM*ZZ-C/(AM*ZZ))/2.
      AX=DSQRT((X-Y-Z)**2+C)
      D=AX*DLOG(YY)
      RETURN
      END
CDECK  ID>, ORIENT. 
      SUBROUTINE ORIENT(S,V1,V2,V3,V4,V5,DJ,NOPT,Y)
C
C         Transforms results of Pickin into Lab variables
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
C   VERMAS INTERNAL COMMON
C
      COMMON/VARIAB/E,E1,E2,E3,E4,E5,P,P3,P4,P5,CT3,ST3,CT4,ST4,CT5,
     1 ST5,CP3,SP3,CP5,SP5
      DOUBLE PRECISION E,E1,E2,E3,E4,E5,P,P3,P4,P5,CT3,ST3,CT4,ST4,CT5,
     1 ST5,CP3,SP3,CP5,SP5
C
C
C   VERMAS INTERNAL COMMON
C
      COMMON/VARIAC/AL3,AL4,BE4,BE5,DE3,DE5,PP3,PP4,PP5
      DOUBLE PRECISION AL3,AL4,BE4,BE5,DE3,DE5,PP3,PP4,PP5
C
C
C   VERMAS INTERNAL COMMON
C
      COMMON/PICKZZ/W1,W2,W3,W4,W5,W31,W52,W12,TAU,SL1
      DOUBLE PRECISION W1,W2,W3,W4,W5,W31,W52,W12,TAU,SL1
C
C
C   VERMAS INTERNAL COMMON
C
      COMMON/EXTRA/S1,S2,T1,T2
      DOUBLE PRECISION S1,S2,T1,T2
C
C
C   VERMAS INTERNAL COMMON
C
      COMMON/LEVI/GRAM,DD1,DD2,DD3,DD4,DD5,DELTA,G4,SA1,SA2
      DOUBLE PRECISION GRAM,DD1,DD2,DD3,DD4,DD5,DELTA,G4,SA1,SA2
C
C
C   VERMAS INTERNAL COMMON
C
      COMMON/DOTP/P12,P13,P14,P15,P23,P24,P25,P34,P35,P45,P1K2,P2K1
      DOUBLE PRECISION P12,P13,P14,P15,P23,P24,P25,P34,P35,P45,P1K2,P2K1
C
      DOUBLE PRECISION Y(4)
      CALL PICKIN(S,V1,V2,V3,V4,V5,DJ,NOPT,Y)
      IF(DJ.EQ.0)GO TO 10
      E=DSQRT(S)
      RE=0.5/E
      E1=RE*(S+W12)
      E2=RE*(S-W12)
      P=RE*SL1
      DE3=RE*(S2-W3+W12)
      DE5=RE*(S1-W5-W12)
      E3=E1-DE3
      E4=DE3+DE5
      E5=E2-DE5
      IF(E4.LT.V4)GO TO 10
      P3=DSQRT(E3*E3-W3)
      P4=DSQRT((E4-V4)*(E4+V4))
      P5=DSQRT(E5*E5-W5)
      PP3=DSQRT(DD1/S)/P
      PP5=DSQRT(DD3/S)/P
      ST3=PP3/P3
      ST5=PP5/P5
      IF(ST3.GT.1..OR.ST5.GT.1.)GO TO 10
      CT3=DSQRT(1.-ST3*ST3)
      CT5=DSQRT(1.-ST5*ST5)
      IF(E1*E3.LT.P13)CT3=-CT3
      IF(E2*E5.GT.P25)CT5=-CT5
      AL3=ST3*ST3/(1.+CT3)
      BE5=ST5*ST5/(1.-CT5)
      IF(DD5.LT.0)GO TO 10
      PP4=DSQRT(DD5/S)/P
      ST4=PP4/P4
      IF(ST4.GT.1.)GO TO 10
      CT4=DSQRT(1.-ST4*ST4)
      IF(E1*E4.LT.P14)CT4=-CT4
      AL4=1.-CT4
      BE4=1.+CT4
      IF(CT4.LT.0)BE4=ST4*ST4/AL4
      IF(CT4.GE.0)AL4=ST4*ST4/BE4
      RR=DSQRT(-GRAM/S)/(P*PP4)
      SP3=RR/PP3
      SP5=-RR/PP5
      IF(DABS(SP3).GT.1..OR.DABS(SP5).GT.1.)GO TO 10
      CP3=-DSQRT(1.-SP3*SP3)
      CP5=-DSQRT(1.-SP5*SP5)
      A1=PP3*CP3-PP5*CP5
      IF(DABS(PP4+PP3*CP3+CP5*PP5).LT.DABS(DABS(A1)-PP4))GO TO 1
      IF(A1.LT.0)CP5=-CP5
      IF(A1.GE.0)CP3=-CP3
 1    RETURN
 10   DJ=0.
      RETURN
      END
CDECK  ID>, PERIPP. 
      DOUBLE PRECISION FUNCTION PERIPP(NUP,NDOWN)
C
C         MATRIX ELEMENT FOR EE --> EELL
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
C   VERMAS INTERNAL COMMON
C
      COMMON/PICKZZ/W1,W2,W3,W4,W5,W31,W52,W12,TAU,SL1
      DOUBLE PRECISION W1,W2,W3,W4,W5,W31,W52,W12,TAU,SL1
C
      COMMON/LEVI/GRAM,D1,D2,D3,D4,D5,DELTA,G4,A1,A2
C
C   VERMAS INTERNAL COMMON
C
      COMMON/CIVITA/EPSI,G5,G6,A5,A6,BB
      DOUBLE PRECISION EPSI,G5,G6,A5,A6,BB
C
C
C   VERMAS INTERNAL COMMON
C
      COMMON/EXTRA/S1,S2,T1,T2
      DOUBLE PRECISION S1,S2,T1,T2
C
C
C   VERMAS INTERNAL COMMON
C
      COMMON/DOTPS/Q1DQ,Q1DQ2,W6
      DOUBLE PRECISION Q1DQ,Q1DQ2,W6
C
      DATA RHO/.585/
      IF(NUP.GT.0)GO TO 1
      U1=1.
      U2=1.
      GO TO 3
 1    IF(NUP.GT.1)GO TO 2
      XT=1.-T1/.71
      XT=XT*XT
      XU=2.79/XT
      U1=XU*XU
      TAU=T1/(4.*W1)
      U2=(1./(XT*XT)-XU*XU*TAU)/(1.-TAU)
      GO TO 3
 2    X=T1/(T1-W3)
      EN=W31-T1
      TAU=T1/(4.*W1)
      RHOT=RHO-T1
      U1=(-.86926*RHO*RHO*W31/RHOT/RHOT-2.23422*W1*(1.-X)**4
     1 /(X*(X*.96-1.26)+1))/T1
      U2=(-TAU*U1-.12549*W31*T1*RHO/RHOT/RHOT*W31*W31/EN/EN/W1)
     1 /(1.-EN*EN/(4.*W1*T1))
 3    IF(NDOWN.GT.0)GO TO 4
      V1=1.
      V2=1.
      GO TO 6
 4    IF(NDOWN.GT.1)GO TO 5
      XT=1.-T2/.71
      XT=XT*XT
      XU=2.79/XT
      V1=XU*XU
      TAU=T2/(4.*W2)
      V2=(1./(XT*XT)-XU*XU*TAU)/(1.-TAU)
      GO TO 6
 5    X=T2/(T2-W5)
      EN=W52-T2
      TAU=T2/(4.*W2)
      RHOT=RHO-T2
      V1=(-.86926*RHO*RHO*W52/RHOT/RHOT-2.23422*W2*(1.-X)**4
     1 /(X*(X*.96-1.26)+1))/T2
      V2=(-TAU*V1-.12549*W52*T2*RHO/RHOT/RHOT*W52*W52/EN/EN/W2)
     1 /(1.-EN*EN/(4.*W2*T2))
 6    CONTINUE
      QQQ=Q1DQ*Q1DQ
      QDQ=4.*W6-W4
      T22=512.*(BB*(DELTA*DELTA-GRAM)-(EPSI-DELTA*(QDQ+Q1DQ2))**2
     A -A1*A6*A6-A2*A5*A5-A1*A2*QQQ)
      T12=128.*(-BB*(D2+G6)-2.*(T1+2.*W6)*(A2*QQQ+A6*A6))*T1
      T21=128.*(-BB*(D4+G5)-2.*(T2+2.*W6)*(A1*QQQ+A5*A5))*T2
      T11=64.*(BB*(QQQ-G4-QDQ*(T1+T2+2.*W6))-2.*(T1+2.*W6)*(T2+2.*W6)
     A *QQQ)*T1*T2
      PERIPP=(U1*V1*T11+U2*V1*T21+U1*V2*T12+U2*V2*T22)/(T1*T2*BB)**2
     A *.25D+00
      RETURN
      END
CDECK  ID>, PICKIN. 
      SUBROUTINE PICKIN(S,V1,V2,V3,V4,V5,DJ,NOPT,Y)
C
C         GENERAL 2-->3 BODY PHASE SPACE WITH TWO T-CHANNELS
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DOUBLE PRECISION Y(4)
      COMMON/PICKZZ/W1,W2,W3,W4,W5,D1,D2,D5,D7,SL1
C
C   VERMAS INTERNAL COMMON
C
      COMMON/EXTRA/S1,S2,T1,T2
      DOUBLE PRECISION S1,S2,T1,T2
C
C
C   VERMAS INTERNAL COMMON
C
      COMMON/ACCURA/ACC3,ACC4
      DOUBLE PRECISION ACC3,ACC4
C
C
C   VERMAS INTERNAL COMMON
C
      COMMON/LEVI/GRAM,DD1,DD2,DD3,DD4,DD5,DELTA,G4,SA1,SA2
      DOUBLE PRECISION GRAM,DD1,DD2,DD3,DD4,DD5,DELTA,G4,SA1,SA2
C
C
C   VERMAS INTERNAL COMMON
C
      COMMON/DOTP/P12,P13,P14,P15,P23,P24,P25,P34,P35,P45,P1K2,P2K1
      DOUBLE PRECISION P12,P13,P14,P15,P23,P24,P25,P34,P35,P45,P1K2,P2K1
C
      DATA PI/3.14159265359D+00/
      X1=Y(1)
      X2=Y(2)
      X3=Y(3)
      W1=V1*V1
      W2=V2*V2
      W3=V3*V3
      W4=V4*V4
      W5=V5*V5
      SIG=V4+V5
      SIG1=SIG*SIG
      SIG2=SIG1
      D1=W3-W1
      D2=W5-W2
      D5=W1-W2
      D6=W4-W5
      SS=S+D5
      RL1=SS*SS-4.*W1*S
      IF(RL1.LE.0)GO TO 20
      SL1=DSQRT(RL1)
      IF(NOPT.NE.0)GO TO 1
      SMAX=S+W3-2.*V3*DSQRT(S)
      CALL MAPS2(S2,X3,SIG1,SMAX,DS2)
      SIG1=S2
 1    SP=S+W3-SIG1
      D3=SIG1-W2
      RL2=SP*SP-4.*S*W3
      IF(RL2.LE.0)GO TO 20
      SL2=DSQRT(RL2)
      T1MAX=W1+W3-(SS*SP+SL1*SL2)/(2.*S)
      T1MIN=(D1*D3+(D3-D1)*(D3*W1-D1*W2)/S)/T1MAX
      CALL MAPT1(T1,X1,T1MIN,T1MAX,DT1)
      D4=W4-T1
      D8=T1-W2
      T13=T1-W1-W3
      SA1=-(T1-D1)*(T1-D1)/4.+W1*T1
      IF(SA1.GE.0)GO TO 20
      SL3=DSQRT(-SA1)
      IF(W1.EQ.0)GO TO 3
      SB=(S*(T1-D1)+D5*T13)/(2.*W1)+W3
      SD=SL1*SL3/W1
      SE=(S*(T1*(S+T13-W2)-W2*D1)+W3*(D5*D8+W2*W3))/W1
      IF(DABS((SB-SD)/SD).LT.1.0)GO TO 2
      SPLUS=SB-SD
      S2MAX=SE/SPLUS
      GO TO 4
 2    S2MAX=SB+SD
      SPLUS=SE/S2MAX
      GO TO 4
 3    S2MAX=(S*(T1*(S+D8-W3)-W2*W3)+W2*W3*(W2+W3-T1))/SS/T13
      SPLUS=SIG2
 4    S2X=S2MAX
      IF(NOPT)5,6,7
 5    IF(SPLUS.GT.SIG2)SIG2=SPLUS
      IF(NOPT.LT.-1)CALL MAPS2(S2,X3,SIG2,S2MAX,DS2)
      IF(NOPT.EQ.-1)CALL MAPLA(S2,T1,W2,X3,SIG2,S2MAX,DS2)
 6    S2X=S2
 7    R1=S2X-D8
      R2=S2X-D6
      RL4=(R1*R1-4.*W2*S2X)*(R2*R2-4.*W5*S2X)
      IF(RL4.LE.0)GO TO 20
      SL4=DSQRT(RL4)
      T2MAX=W2+W5-(R1*R2+SL4)/(2.*S2X)
      T2MIN=(D2*D4+(D4-D2)*(D4*W2-D2*T1)/S2X)/T2MAX
      CALL MAPT2(T2,X2,T2MIN,T2MAX,DT2)
      D7=T1-T2
      R3=D4-T2
      R4=D2-T2
      B=R3*R4-2.*(T1+W2)*T2
      C=T2*D6*D8+(D6-D8)*(D6*W2-D8*W5)
      T25=T2-W2-W5
      SA2=-R4*R4/4.+W2*T2
      IF(SA2.GE.0)GO TO 20
      SL6=2.*DSQRT(-SA2)
      G4=-R3*R3/4.+T1*T2
      IF(G4.GE.0)GO TO 20
      SL7=DSQRT(-G4)*2.
      SL5=SL6*SL7
      IF(DABS((SL5-B)/SL5).LT.1.0)GO TO 8
      S2P=(SL5-B)/(2.*T2)
      S2MIN=C/(T2*S2P)
      GO TO 9
 8    S2MIN=(-SL5-B)/(2.*T2)
      S2P=C/(T2*S2MIN)
 9    IF(NOPT.GT.1)CALL MAPS2(S2,X3,S2MIN,S2MAX,DS2)
      IF(NOPT.EQ.1)CALL MAPLA(S2,T1,W2,X3,S2MIN,S2MAX,DS2)
      AP=-(S2+D8)*(S2+D8)/4.+S2*T1
      IF(W1.EQ.0)GO TO 10
      DD1=-W1*(S2-S2MAX)*(S2-SPLUS)/4.
      GO TO 11
 10   DD1=SS*T13*(S2-S2MAX)/4.
 11   DD2=-T2*(S2-S2P)*(S2-S2MIN)/4.
      YY4=DCOS(PI*Y(4))
      DD=DD1*DD2
      P12=0.5*(S-W1-W2)
      ST=S2-T1-W2
      DELB=(2.*W2*R3+R4*ST)*(4.*P12*T1-(T1-D1)*ST)/(16.*AP)
      IF(DD.LE.0)GO TO 20
      DELTA=DELB-YY4*ST*DSQRT(DD)/(2.*AP)
      S1=(2.*P12*R3-4.*DELTA)/ST+T2+W1
      IF(AP.GE.0)GO TO 20
      DJ=DS2*DT1*DT2*PI*PI/(8.*SL1*DSQRT(-AP))
      GRAM=(1.-YY4)*(1.+YY4)*DD/AP
      P13=-T13/2.
      P14=(D7+S1-W3)/2.
      P15=(S+T2-S1-W2)/2.
      P23=(S+T1-S2-W1)/2.
      P24=(S2-D7-W5)/2.
      P25=-T25/2.
      P34=(S1-W3-W4)/2.
      P35=(S+W4-S1-S2)/2.
      P45=(S2-W4-W5)/2.
      P1K2=(S1-T2-W1)/2.
      P2K1=ST/2.
      IF(W2.EQ.0)GO TO 14
      SBB=(S*(T2-D2)-D5*T25)/(2.*W2)+W5
      SDD=SL1*SL6/(2.*W2)
      SEE=(S*(T2*(S+T25-W1)-W1*D2)+W5*(W1*W5-D5*(T2-W1)))/W2
      IF(SBB/SDD.LT.0)GO TO 12
      S1P=SBB+SDD
      S1M=SEE/S1P
      GO TO 13
 12   S1M=SBB-SDD
      S1P=SEE/S1M
 13   DD3=-W2*(S1P-S1)*(S1M-S1)/4.
      GO TO 15
 14   S1P=(S*(T2*(S-W5+T2-W1)-W1*W5)+W1*W5*(W1+W5-T2))/T25/(S-D5)
      DD3=-T25*(S-D5)*(S1P-S1)/4.
 15   ACC3=(S1P-S1)/(S1P+S1)
      SSB=(-R3*(D1-T1)+2.*T1*(T2+W1))/(2.*T1)
      SSD=SL3*SL7/T1
      SSE=(T2-W1)*(W4-W3)+(T2-W4+D1)*((T2-W1)*W3-(W4-W3)*W1)/T1
      IF(SSB/SSD.LT.0)GO TO 16
      S1PP=SSB+SSD
      S1PM=SSE/S1PP
      GO TO 17
 16   S1PM=SSB-SSD
      S1PP=SSE/S1PM
 17   DD4=-T1*(S1-S1PP)*(S1-S1PM)/4.
      ACC4=(S1-S1PM)/(S1+S1PM)
      DD5=DD1+DD3+((P12*(T1-D1)/2.-W1*P2K1)*(P2K1*(T2-D2)-W2*R3)
     A -DELTA*(2.*P12*P2K1-W2*(T1-D1)))/P2K1
      RETURN
 20   DJ=0.
      RETURN
      END
CDECK  ID>, SETGEN. 
      SUBROUTINE SETGEN(F,NDIM,NPOIN,NPRIN,NTREAT)
C
C         Samples the function to make it ready for event generation
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      EXTERNAL F
      DOUBLE PRECISION X(10)
      INTEGER N(10)
C
C   VERMAS INTERNAL COMMON
C
      COMMON/MAXI/MDUM,MBIN,FFMAX,FMAX(2500),NM(2500)
      INTEGER MDUM,MBIN,NM
      DOUBLE PRECISION FFMAX,FMAX
C
C
C   RANMAR PSEUDORANDOM NUMBER GENERATOR COMMON
C
      REAL RVEC(10)
      INTEGER ID,ITI,IJKLIN,NTOTIN,NTO2IN,STATE(100)
      COMMON/RANMA1/IJKLIN,NTOTIN,NTO2IN,STATE
C
      MBIN=3
      FFMAX=0.
      SUM=0.
      SUM2=0.
      SUM2P=0.
      MAX=MBIN**NDIM
      IF(NPRIN.GE.2) WRITE(6,200) MBIN,MAX,NPOIN
 200  FORMAT(25H1SUBROUTINE SETGEN USES A,I3,15H**NDIM DIVISION/
     1 17H THIS RESULTS IN ,I7,6H CUBES/
     2 17H THE PROGRAM PUT ,I5,29H POINTS IN EACH CUBE TO FIND
     3 ,30HSTARTING VALUES FOR THE MAXIMA//)
      DO 5 J=1,MAX
      NM(J)=0
 5    FMAX(J)=0.
      DO 1 J=1,MAX
      JJ=J-1
      DO 2 K=1,NDIM
      JJJ=JJ/MBIN
      N(K)=JJ-JJJ*MBIN
 2    JJ=JJJ
      FSUM=0.
      FSUM2=0.
      DO 3 M=1,NPOIN
      CALL RANMAR(RVEC,NDIM)
      DO 4 K=1,NDIM
 4    X(K)=(RVEC(K)+N(K))/MBIN
      IF(NTREAT.GT.0)Z=TREAT(F,X,NDIM)
      IF(NTREAT.LE.0)Z=F(X)
      IF(Z.GT.FMAX(J))FMAX(J)=Z
      FSUM=FSUM+Z
 3    FSUM2=FSUM2+Z*Z
      AV=FSUM/NPOIN
      AV2=FSUM2/NPOIN
      SIG2=AV2-AV*AV
      SIG=DSQRT(SIG2)
      SUM=SUM+AV
      SUM2=SUM2+AV2
      SUM2P=SUM2P+SIG2
      IF(FMAX(J).GT.FFMAX)FFMAX=FMAX(J)
      EFF=10000.
      IF(FMAX(J).NE.0)EFF=FMAX(J)/AV
      IF(NPRIN.GE.3) WRITE(6,100) J,N,AV,SIG,FMAX(J),EFF
 100  FORMAT(I6,3X,10I1,G13.6,G12.4,G13.6,F10.2)
 1    CONTINUE
      SUM=SUM/MAX
      SUM2=SUM2/MAX
      SUM2P=SUM2P/MAX
      SIG=DSQRT(SUM2-SUM*SUM)
      SIGP=DSQRT(SUM2P)
      EFF1=0.
      DO 6 J=1,MAX
 6    EFF1=EFF1+FMAX(J)
      EFF1=EFF1/(MAX*SUM)
      EFF2=FFMAX/SUM
      IF(NPRIN.GE.1) WRITE(6,101) SUM,SIG,SIGP,FFMAX,EFF1,EFF2
 101  FORMAT(29H0THE AVERAGE FUNCTION VALUE =,G14.6/
     1     29H THE OVERALL STD DEV        =,G14.4/
     2     29H THE AVERAGE STD DEV        =,G14.4/
     3     29H THE MAXIMUM FUNCTION VALUE =,G14.6/
     4     29H THE AVERAGE INEFFICIENCY   =,G14.3/
     5     29H THE OVERALL INEFFICIENCY   =,G14.3/)
      RETURN
      END
CDECK  ID>, TREAT.  
      DOUBLE PRECISION FUNCTION TREAT(F,X,NDIM)
C
C         Uses information from VEGAS to smooth a function
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      EXTERNAL F
      DOUBLE PRECISION X(10),Z(10)
C
C   VERMAS INTERNAL COMMON
C
      COMMON/BVEG2/NDO,IT,SI,SI2,SWGT,SCHI,XI(50,10),SCALLS
     1 ,D(50,10),DI(50,10)
      INTEGER NDO,IT
      DOUBLE PRECISION SI,SI2,SWGT,SCHI,XI,SCALLS,D,DI
C
      DATA NCALL/0/
      IF(NCALL.NE.0)GO TO 1
      NCALL=1
      R=NDO
      R=R**NDIM
 1    W=R
      DO 4 I=1,NDIM
      XX=X(I)*NDO
      J=XX
      JJ=J+1
      Y=XX-J
      IF(J.GT.0)GO TO 2
      DD=XI(1,I)
      GO TO 3
 2    DD=XI(JJ,I)-XI(J,I)
 3    Z(I)=XI(JJ,I)-DD*(1.-Y)
 4    W=W*DD
      TREAT=W*F(Z)
      RETURN
      END
CDECK  ID>, VECDET. 
      SUBROUTINE VECDET
C
C         Put results of GAMGAM into 4-vectors
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
C   VERMAS INTERNAL COMMON
C
      COMMON/VEC/R1(4),R2(4),R3(4),R4(4),R5(4),R6(4),R7(4)
     1 ,Q(4),QP(4),PQ(4)
      DOUBLE PRECISION R1,R2,R3,R4,R5,R6,R7
     1 ,Q,QP,PQ
C
C
C   VERMAS INTERNAL COMMON
C
      COMMON/VARIAB/E,E1,E2,E3,E4,E5,P,P3,P4,P5,CT3,ST3,CT4,ST4,CT5,
     1 ST5,CP3,SP3,CP5,SP5
      DOUBLE PRECISION E,E1,E2,E3,E4,E5,P,P3,P4,P5,CT3,ST3,CT4,ST4,CT5,
     1 ST5,CP3,SP3,CP5,SP5
C
C
C   VERMAS INTERNAL COMMON
C
      COMMON/VARIAC/AL3,AL4,BE4,BE5,DE3,DE5,PP3,PP4,PP5
      DOUBLE PRECISION AL3,AL4,BE4,BE5,DE3,DE5,PP3,PP4,PP5
C
C
C   VERMAS INTERNAL COMMON
C
      COMMON/VARIAD/E6,E7,P6,P7,CT6,ST6,CT7,ST7,CP6,SP6,CP7,SP7,W
      DOUBLE PRECISION E6,E7,P6,P7,CT6,ST6,CT7,ST7,CP6,SP6,CP7,SP7,W
C
      R1(1)=E1
      R1(2)=0.
      R1(3)=0.
      R1(4)=P
      R2(1)=E2
      R2(2)=0.
      R2(3)=0.
      R2(4)=-P
      R3(1)=E3
      R3(2)=PP3*CP3
      R3(3)=PP3*SP3
      R3(4)=P3*CT3
      R4(1)=E4
      R4(2)=PP4
      R4(3)=0.
      R4(4)=P4*CT4
      R5(1)=E5
      R5(2)=PP5*CP5
      R5(3)=PP5*SP5
      R5(4)=P5*CT5
      PP6=P6*ST6
      PP7=P7*ST7
      R6(1)=E6
      R6(2)=PP6*CP6
      R6(3)=PP6*SP6
      R6(4)=P6*CT6
      R7(1)=E7
      R7(2)=PP7*CP7
      R7(3)=PP7*SP7
      R7(4)=P7*CT7
      Q(1)=R6(1)-R7(1)
      Q(2)=R6(2)-R7(2)
      Q(3)=R6(3)-R7(3)
      Q(4)=R6(4)-R7(4)
      QP(1)=E1+E3
      QP(2)=R3(2)
      QP(3)=R3(3)
      QP(4)=P+R3(4)
      PQ(1)=E2+E5
      PQ(2)=R5(2)
      PQ(3)=R5(3)
      PQ(4)=-P+R5(4)
      RETURN
      END
CDECK  ID>, VEGAS.  
      SUBROUTINE VEGAS(FXN,BCC,NDIM,NCALL,ITMX,NPRN,IGRAPH)
C
C  SUBROUTINE PERFORMS N-DOUBLE PRECISIONAL MONTE CARLO INTEG*N
C    - BY G.P.  LEPAGE  SEPT 1976/ (REV) APR 1978
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
C   VERMAS INTERNAL COMMON
C
      COMMON/BVEG2/NDO,IT,SI,SI2,SWGT,SCHI,XI(50,10),SCALLS
     1 ,D(50,10),DI(50,10)
      INTEGER NDO,IT
      DOUBLE PRECISION SI,SI2,SWGT,SCHI,XI,SCALLS,D,DI
C
C
C   VERMAS INTERNAL COMMON
C
      COMMON/RESULT/S1,S2,S3,S4
      DOUBLE PRECISION S1,S2,S3,S4
C
      DOUBLE PRECISION XIN(50),R(50),DX(10),DT(10)
      DOUBLE PRECISION XL(10),XU(10),QRAN(10),X(10)
C
C   RANMAR PSEUDORANDOM NUMBER GENERATOR COMMON
C
      REAL RVEC(10)
      INTEGER ID,ITI,IJKLIN,NTOTIN,NTO2IN,STATE(100)
      COMMON/RANMA1/IJKLIN,NTOTIN,NTO2IN,STATE
C
      INTEGER IA(10),KG(10)
      DATA XL,XU/10*0.,10*1./
      DATA NDMX/50/,ALPH/1.5/,ONE/1./,MDS/1/
C
      IPR=1
      IF(NPRN.GT.0)IPR=0
      NDO=1
      DO 1 J=1,NDIM

 1    XI(1,J)=ONE
C
      ENTRY VEGAS1(FXN,BCC,NDIM,NCALL,ITMX,NPRN,IGRAPH)
C      - INITIALIZES CUMMULATIVE VARIABLES,BUT NOT GRID
      NOW=IGRAPH
      IF(IGRAPH.GT.0)CALL INPLOT(NOW,F1,W)
      IT=0
      SI=0.
      SI2=SI
      SWGT=SI
      SCHI=SI
      SCALLS=SI
C
      ENTRY VEGAS2(FXN,BCC,NDIM,NCALL,ITMX,NPRN,IGRAPH)
C      NO INITIALIZATION
      ND=NDMX
      NG=1
      IF(MDS.EQ.0) GO TO 2
      NG=(NCALL/2.)**(1./NDIM)
      MDS=1
      IF((2*NG-NDMX).LT.0) GO TO 2
      MDS=-1
      NPG=NG/NDMX+1
      ND=NG/NPG
      NG=NPG*ND
 2    K=NG**NDIM
      NPG=NCALL/K
      IF(NPG.LT.2) NPG=2
      CALLS=NPG*K
      DXG=ONE/NG
      DV2G=DXG**(2*NDIM)/NPG/NPG/(NPG-ONE)
      XND=ND
      NDM=ND-1
      DXG=DXG*XND
      XJAC=ONE
      DO 3 J=1,NDIM
      DX(J)=XU(J)-XL(J)
 3    XJAC=XJAC*DX(J)
C
C  REBIN PRESERVING BIN DENSITY
C
      IF(ND.EQ.NDO) GO TO 8
      RC=NDO/XND
      DO 7 J=1,NDIM
      K=0
      XN=0.
      DR=XN
      I=K
 4    K=K+1
      DR=DR+ONE
      XO=XN
      XN=XI(K,J)
 5    IF(RC.GT.DR) GO TO 4
      I=I+1
      DR=DR-RC
      XIN(I)=XN-(XN-XO)*DR
      IF(I.LT.NDM) GO TO 5
      DO 6  I=1,NDM
 6    XI(I,J)=XIN(I)
 7    XI(ND,J)=ONE
      NDO=ND
      ACC=BCC
C
 8     IF(NPRN.NE.0.AND.NPRN.NE.10) WRITE(6,200) NDIM,CALLS,IT,ITMX
     1 ,ACC,MDS,ND
      IF(NPRN.EQ.10) WRITE(6,290) NDIM,CALLS,ITMX,ACC,MDS,ND
C
      ENTRY VEGAS3(FXN,BCC,NDIM,NCALL,ITMX,NPRN,IGRAPH)
C     - MAIN INTEGRATION LOOP
 9    IT=IT+1
      TI=0.
      TSI=TI
      IF(IGRAPH.GT.0)CALL REPLOT(NOW,F1,W)
      DO 10 J=1,NDIM
      KG(J)=1
      DO 10 I=1,ND
      D(I,J)=TI
 10   DI(I,J)=TI
C
 11    FB=0.
      F2B=FB
      K=0
 12   K=K+1
      CALL RANMAR(RVEC,NDIM)
      DO 121 J=1,NDIM
 121  QRAN(J)=RVEC(J)
      WGT=XJAC
      DO 15 J=1,NDIM
      XN=(KG(J)-QRAN(J))*DXG+ONE
      IA(J)=XN
      IAJ=IA(J)
      IAJ1=IAJ-1
      IF(IAJ.GT.1) GO TO 13
      XO=XI(IAJ,J)
      RC=(XN-IAJ)*XO
      GO TO 14
 13   XO=XI(IAJ,J)-XI(IAJ1,J)
      RC=XI(IAJ1,J)+(XN-IAJ)*XO
 14   X(J)=XL(J)+RC*DX(J)
 15   WGT=WGT*XO*XND
C
      F=FXN(X)*WGT
      F1=F/CALLS
      W=WGT/CALLS
      IF(IGRAPH.GT.0)CALL XPLOT(NOW,F1,W)
      F2=F*F
      FB=FB+F
      F2B=F2B+F2
      DO 16 J=1,NDIM
      IAJ=IA(J)
      DI(IAJ,J)=DI(IAJ,J)+F/CALLS
 16   IF(MDS.GE.0)  D(IAJ,J)=D(IAJ,J)+F2
      IF(K.LT.NPG) GO TO 12
C
      F2B=F2B*NPG
      F2B=DSQRT(F2B)
      F2B=(F2B-FB)*(F2B+FB)
      TI=TI+FB
      TSI=TSI+F2B
      IF(MDS.GE.0) GO TO 18
      DO 17 J=1,NDIM
      IAJ=IA(J)
 17   D(IAJ,J)=D(IAJ,J)+F2B
 18   K=NDIM
 19   KG(K)=MOD(KG(K),NG)+1
      IF(KG(K).NE.1) GO TO 11
      K=K-1
      IF(K.GT.0) GO TO 19
C
C  FINAL RESULTS FOR THIS ITERATION
C
      TI=TI/CALLS
      TSI=TSI*DV2G
      TI2=TI*TI
      WGT=TI2/TSI
      SI=SI+TI*WGT
      SI2=SI2+TI2
      SWGT=SWGT+WGT
      SCHI=SCHI+TI2*WGT
      SCALLS=SCALLS+CALLS
      AVGI=SI/SWGT
      SD=SWGT*IT/SI2
      CHI2A=0.
      IF(IT.GT.1)CHI2A=SD*(SCHI/SWGT-AVGI*AVGI)/(IT-1)
      SD=ONE/SD
      SD=DSQRT(SD)
C
      IF(NPRN.EQ.0) GO TO 21
      TSI=DSQRT(TSI)
      IF(NPRN.NE.10) WRITE(6,201) IPR,IT,TI,TSI,AVGI,SD,CHI2A
      IF(NPRN.EQ.10) WRITE(6,203) IT,TI,TSI,AVGI,SD,CHI2A
      IF(NPRN.GE.0) GO TO 21
      DO 20 J=1,NDIM
      WRITE(6,202) J
 20   WRITE(6,204) (XI(I,J),DI(I,J),D(I,J),I=1,ND)
C
C   REFINE GRID
C
 21   IF(DABS(SD/AVGI).LE.DABS(ACC).OR.IT.GE.ITMX)NOW=2
      S1=AVGI
      S2=SD
      S3=TI
      S4=TSI
      IF(IGRAPH.GT.0)CALL PLOTIT(NOW,F1,W)
      DO 23 J=1,NDIM
      XO=D(1,J)
      XN=D(2,J)
      D(1,J)=(XO+XN)/2.
      DT(J)=D(1,J)
      DO 22 I=2,NDM
      D(I,J)=XO+XN
      XO=XN
      XN=D(I+1,J)
      D(I,J)=(D(I,J)+XN)/3.
 22   DT(J)=DT(J)+D(I,J)
      D(ND,J)=(XN+XO)/2.
 23   DT(J)=DT(J)+D(ND,J)
C
      DO 28 J=1,NDIM
      RC=0.
      DO 24 I=1,ND
      R(I)=0.
      IF(D(I,J).LE.0.) GO TO 24
      XO=DT(J)/D(I,J)
      R(I)=((XO-ONE)/XO/DLOG(XO))**ALPH
 24   RC=RC+R(I)
      RC=RC/XND
      K=0
      XN=0.
      DR=XN
      I=K
 25   K=K+1
      DR=DR+R(K)
      XO=XN
      XN=XI(K,J)
 26   IF(RC.GT.DR) GO TO 25
      I=I+1
      DR=DR-RC
      XIN(I)=XN-(XN-XO)*DR/R(K)
      IF(I.LT.NDM) GO TO 26
      DO 27 I=1,NDM
 27   XI(I,J)=XIN(I)
 28   XI(ND,J)=ONE
C
      IF(IT.LT.ITMX.AND.DABS(ACC).LT.DABS(SD/AVGI))GO TO 9
 200  FORMAT(35H0INPUT PARAMETERS FOR VEGAS   NDIM=,I3
     1,8H  NCALL=,F8.0/28X,5H  IT=,I5,8H  ITMX =,I5/28X
     2,6H  ACC=,G9.3/28X,6H  MDS=,I3,6H   ND=,I4//)
 290  FORMAT(13H0VEGAS  NDIM=,I3,8H  NCALL=,F8.0,8H  ITMX =,I5
     1 ,6H  ACC=,G9.3,6H  MDS=,I3,6H   ND=,I4)
 201  FORMAT(/I1,20HINTEGRATION BY VEGAS/13H0ITERATION NO,I3,
     114H.   INTEGRAL =,G14.8/20X,10HSTD DEV  =,G10.4/
     234H ACCUMULATED RESULTS.   INTEGRAL =,G14.8/
     324X,10HSTD DEV  =,G10.4 / 24X,18HCHI**2 PER ITN   =,G10.4)
 202  FORMAT(14H0DATA FOR AXIS,I2 / 7X,1HX,7X,10H  DELT I  ,
     12X,11H CONVCE    ,11X,1HX,7X,10H  DELT I  ,2X,11H CONVCE
     2,11X,1HX,7X,10H  DELT I  ,2X,11H CONVCE     /)
 204  FORMAT(1X,3G12.4,5X,3G12.4,5X,3G12.4)
 203  FORMAT(1H ,I3,G20.8,G12.4,G20.8,G12.4,G12.4)
      S1=AVGI
      S2=SD
      S3=CHI2A
      RETURN
      END
CDECK  ID>, TWPSEL. 
      SUBROUTINE TWPSEL(ECM)
C******************************************************************************
C
C   This routine changes the LUND paramaters which reside in the LUDATx
C   common blocks. The changes are mass dependent, therefore this routine
C   is called with every event.
C
C     INPUTS:    ECM     Gamma-gamma center of mass energy.
C     =======
C
C   A.Buijs    4-feb-87
C   G.VANDALEN 11-Nov-88   minor changes - let pi0's, eta's, eta''s decay
C
C******************************************************************************
      IMPLICIT NONE
C
C
      REAL       MRHO, XMN, XMX, QMN, QMX, PTMIN, PTMAX, ECM
      PARAMETER (MRHO = 0.769, XMN = 0.8, XMX = 8.0)
      PARAMETER (QMN = 0.175, QMX = 0.325)
      PARAMETER (PTMIN = 0.250, PTMAX = 0.375)
C+
C   First the minimum energy at which fragmentation still occurs.
C   Default is 1 GeV, which is much too high.
C   In case of FF, use higher values.
C-
      PAR(23) = MAX(0.1,0.1+(ECM-1.5)*0.6)
      PAR(23) = MIN(1.1,PAR(23))
      PAR(22) = PAR(23)
      PAR(26) = MAX(1.0,1.0+(ECM-1.5)*0.6)
      PAR(26) = MIN(2.0,PAR(26))
      PAR(28) = 1.0
      PAR(29) = 0.7
C+
C   The suppression of diquark-antidiquark pair production.
C   Will lead to baryon production and such; ppbarpipi.
C   Is sliding with W.
C   PAR(8) and (9) and probabilities for spin-1 production.
C-
      PAR(1) = MIN(0.1,(ECM-1.0)*0.0225)
      PAR(1) = MAX(0.0, PAR(1))
      PAR(2) = 0.202
      PAR(8) = 0.5
      PAR(9) = 0.5
C+
C   Hadron pt and quark mass, sliding for low W.
C   u and d quarks only. PAR(12) is the width of the pt distributions.
C-
      IF (ECM .GT. XMX) THEN
        PMAS(101) = QMX
        PMAS(102) = QMX
        PAR(12)   = PTMAX
      ELSE
        PMAS(101) = QMN+(QMX-QMN)*(ECM-XMN)/(XMX-XMN)
        PMAS(102) = PMAS(101)
        PAR(12  ) = PTMIN+(PTMAX-PTMIN)*(ECM-XMN)/(XMX-XMN)
      END IF
C+
C   Some QCD parameters: 1st order QCD, four flavors,
C   No initial state radiation, PARE(1), PARE(2) are the Lambda values
C   in the first and second order calculation (hence PARE(2) obsolete).
C-
      MSTE(1) = 1
      MSTE(4) = 4
      MSTE(7) = 0
      PARE(1) = 0.20
      PARE(2) = 0.50
C
      RETURN
      END
